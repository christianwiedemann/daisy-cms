{#
/**
 * @file
 * container
 *
 * See container.wingsuit.yaml for documentation.
 */
#}

{# Defaults #}
{% set width = width|default('default') %}
{% set bg_image %}{{- bg_image -}}{% endset %}
{% set bg_color = bg_color|default('transparent') %}
{#
  Padding x defaults:
  The container x padding is allways "default" for all widhts.
  Only width "full" removes the padding_x completly.
#}
{% set padding_x = width != 'full' ? padding_x|default('default') : '' %}
{% set padding_x = padding_x|default('default') %}
{% set attributes = attributes|default(create_attribute()) %}
{% set bg_attributes = bg_attributes|default(create_attribute()) %}

{#
  Padding top/bottom defaults:
  Very basic logic for vertical spacing. Each "auto" container has a default spacing to bottom.
  If a background color is adjusted a "default" padding to top is adjusted.
  The user can allways overwrite the this behavior.
#}
{% set padding_top = padding_top|default('auto') == 'auto' and (bg_color or bg_image) ? 'default' : padding_top %}
{% set padding_bottom = padding_bottom|default('auto') == 'auto' ? 'default' : padding_bottom %}

{# Settings #}
{% set bg_classes = ([
  'relative',
] | sort | join(' ') | trim )%}

{% set classes = ([
  is_layout_builder == false ? 'here margin top ',
  classes,
  'mx-auto w-full'
] | sort | join(' ') | trim )%}

{% set attributes_set = create_attributes_set(
  {
    bg_color: {
      transparent: "",
      purple_dark: "dark bg-purple-900",
      teal: "dark bg-teal-800",
      teal_medium: "dark bg-teal-500",
      gray_light: "bg-gray-300",
  },
    padding_x: {
    none: "",
    default: "px-4 md:px-8"
  },
    padding_top: {
    none: "",
    xxsmall: "pt-4 lg:pt-6",
    xsmall: "pt-4 lg:pt-8",
    small: "pt-8 lg:pt-16",
    default: "pt-16 lg:pt-28",
  },
    padding_bottom: {
    none: '',
    xxsmall: "pb-4 lg:pb-6",
    xsmall: "pb-4 lg:pb-8",
    small: "pb-8 lg:pb-16",
    default: "pb-16 lg:pb-28",
  },
    width: {
    default: "max-w-8xl",
    full:  "",
    small: "max-w-7xl",
  }
  },
  { bg_color: bg_color,
    padding_x: padding_x,
    padding_top: padding_top,
    padding_bottom: padding_bottom,
    width: width
  }
) %}

{# TEMPLATE #}
{% if bg_color or bg_image %}
<div {{ bg_attributes.addClass(bg_classes).merge(attributes_set.bg_color) }}>
  {{ bg_image }}
{% endif %}
  <div {{ attributes.addClass(classes).merge(attributes_set.width).merge(attributes_set.padding_bottom) }}>
    {% block content %}
      {{ content }}
    {% endblock %}
  </div>
{% if bg_color or bg_image%}
</div>
{% endif %}
